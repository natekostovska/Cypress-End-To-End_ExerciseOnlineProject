{
  "version": 3,
  "sources": ["../../../app/routes/signup.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\signup.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\signup.jsx\");\n  import.meta.hot.lastModified = \"1735334632830.5945\";\n}\n// REMIX HMR END\n\nimport { json } from '@remix-run/node';\nimport Auth from '../components/Auth';\nimport { signup } from '../data/auth.server';\nimport { isValidEmail, isValidPassword } from '../util/validation.server';\nfunction SignupRoute() {\n  return <Auth mode=\"signup\" />;\n}\n_c = SignupRoute;\nexport default SignupRoute;\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const credentials = Object.fromEntries(formData);\n  if (!isValidEmail(credentials.email) || !isValidPassword(credentials.password)) {\n    return json({\n      message: 'Invalid credentials entered.'\n    }, {\n      status: 400\n    });\n  }\n  return signup(credentials);\n}\nvar _c;\n$RefreshReg$(_c, \"SignupRoute\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAoBA,kBAAqB;AAErB,kBAAuB;AACvB,wBAA8C;AAErC;AAxBT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,kCAAoC,EAAE;AAAA,EAC/E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyB;AACzB,cAAY,IAAI,eAAe;AACjC;AAOA,SAAS,cAAc;AACrB,SAAO,mDAAC,gBAAK,MAAK,YAAX;AAAA;AAAA;AAAA;AAAA,SAAoB;AAC7B;AACA,KAAK;AACL,IAAO,iBAAQ;AAef,IAAI;AACJ,aAAa,IAAI,aAAa;AAE9B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
