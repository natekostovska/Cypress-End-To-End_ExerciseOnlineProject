{
  "version": 3,
  "sources": ["../../../app/routes/index.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\index.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\index.jsx\");\n  import.meta.hot.lastModified = \"1735314904584.314\";\n}\n// REMIX HMR END\n\nimport { Link, useLoaderData } from '@remix-run/react';\nimport Takeaways from '../components/Takeaways';\nimport { prisma } from '../data/prisma.server';\nexport default function Index() {\n  _s();\n  const takeways = useLoaderData();\n  return <>\r\n      <section className=\"text-center max-w-5xl mx-auto my-4\">\r\n        <h1 className=\"font-bold text-2xl my-4\">Learn Cypress</h1>\r\n        <p>Cypress is an amazing end-to-end testing software and framework.</p>\r\n        <p>\r\n          Manage your key Cypress takeaways and concepts with our learning app.\r\n        </p>\r\n      </section>\r\n      <section className=\"text-center max-w-5xl mx-auto my-4\">\r\n        <Takeaways items={takeways} />\r\n      </section>\r\n      <section>\r\n        <p className='text-center'>\r\n          <Link to=\"/takeaways/new\" className='bg-blue-700 text-blue-50 rounded-sm px-8 py-4 text-lg hover:bg-blue-600'>+ Add a new takeaway</Link>\r\n        </p>\r\n      </section>\r\n    </>;\n}\n_s(Index, \"cAGvmQE/8Cn7qE4M65B0m2EaOno=\", false, function () {\n  return [useLoaderData];\n});\n_c = Index;\nexport function loader() {\n  return prisma.takeaway.findMany({\n    take: 2\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAuBA,oBAAuB;AAId;AA1BT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,iCAAmC,EAAE;AAAA,EAC9E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAwB;AACxB,cAAY,IAAI,eAAe;AACjC;AAMe,SAAR,QAAyB;AAC9B,KAAG;AACH,QAAM,WAAW,cAAc;AAC/B,SAAO,sFACH;AAAA,uDAAC,aAAQ,WAAU,sCACjB;AAAA,yDAAC,QAAG,WAAU,2BAA0B,6BAAxC;AAAA;AAAA;AAAA;AAAA,aAAqD;AAAA,MACrD,mDAAC,OAAE,gFAAH;AAAA;AAAA;AAAA;AAAA,aAAmE;AAAA,MACnE,mDAAC,OAAE,qFAAH;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,IACA,mDAAC,aAAQ,WAAU,sCACjB,6DAAC,qBAAU,OAAO,YAAlB;AAAA;AAAA;AAAA;AAAA,WAA4B,KAD9B;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,aACC,6DAAC,OAAE,WAAU,eACX,6DAAC,QAAK,IAAG,kBAAiB,WAAU,2EAA0E,oCAA9G;AAAA;AAAA;AAAA;AAAA,WAAkI,KADpI;AAAA;AAAA;AAAA;AAAA,WAEA,KAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,OAfG;AAAA;AAAA;AAAA;AAAA,SAgBL;AACJ;AACA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AAML,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
